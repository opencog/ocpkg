.\"Text automatically generated by txt2man
.TH ocpkg 8 "23 August 2012" "" "ocpkg manual"
.SH NAME
\fBocpkg \fP- Download, build, test, install and package OpenCog
\fB
.SH SYNOPSIS
.nf
.fam C
\fBocpkg\fP \fB--debs\fP [\fIoptions\fP]
\fBocpkg\fP \fB--tool\fP [\fIoptions\fP]
\fBocpkg\fP \fB--local\fP [\fIoptions\fP]
\fBocpkg\fP \fB--ppa\fP [\fIoptions\fP]
\fBocpkg\fP \fB--dailydeb\fP [\fIoptions\fP]

.fam T
.fi
.fam T
.fi
.SH DESCRIPTION
Front end script to the \fBocpkg\fP suite of bash scripts used to download,
build, test, install and package OpenCog. This multi-call script allows
anyone to build and test different package types.
.SH USAGE
\fBocpkg\fP is a multi-call script. A multi-call script is a script that
performs the same job as more than one utility script. That means there
is just a single \fBocpkg\fP script, but that single script acts like a large
number of sub-scripts. This allows \fBocpkg\fP script to be smaller since all
the builtin sub-scripts can share code for many common operations. You
can invoke \fBocpkg\fP by issuing a package type as an argument on the command
line. For example, to build Debian/Ubuntu DEB packages, enter:
.PP
.nf
.fam C
        ocpkg --debs

.fam T
.fi
For your convenience, you can invoke a particular package type in \fBocpkg\fP
using links to \fBocpkg\fP script. For example, entering:
.PP
.nf
.fam C
        ln -s ocpkg ocdebs

.fam T
.fi
will cause ocdebs to behave as '\fBocpkg\fP \fB--debs\fP'.
.SH COMMANDS AND OPTIONS
.TP
.B
\fBocpkg\fP \fB--debs\fP [\fIoptions\fP]
Create DEB packages for Debian based systems.
(including Ubuntu).
.RS
.TP
.B
Options:
.RS
.TP
.B
\fB-s\fP LOCAL_SOURCE_DIR
Local source branch/directory of OpenCog.
.TP
.B
\fB-l\fP LOCAL_BUILD_DIR
Local build directory.
.TP
.B
\fB-r\fP BZR_REVISION
Bazaar revision number to branch locally.
.TP
.B
\fB-d\fP
Digitally sign built Debian packages.
.TP
.B
\fB-p\fP
Use pbuilder chroot to build in a minimal
debian install.
.TP
.B
\fB-c\fP
Build Debian/Ubuntu source package only.
.TP
.B
\fB-n\fP
Suppress Bazaar update before building
Debian packages.
.TP
.B
\fB-v\fP
Turn on verbose mode.
.TP
.B
\fB-h\fP
Prints out help message with usage
instructions.
.RE
.RE
.TP
.B
\fBocpkg\fP \fB--tool\fP [\fIoptions\fP]
Perform common operations related to building
OpenCog.
.RS
.TP
.B
Options:
.RS
.TP
.B
\fB-j\fP MAKE_JOBS
Override auto-detected 'make' jobs i.e. number
of jobs/commands to run simultaneously.
.TP
.B
\fB-s\fP LOCAL_SOURCE_DIR
Local source branch/directory of OpenCog.
.TP
.B
\fB-l\fP LOCAL_BUILD_DIR
Local build directory.
.TP
.B
\fB-r\fP BZR_REVISION
Bazaar revision number to branch locally.
.TP
.B
\fB-a\fP
Add Debian repositories/Launchpad PPA which
contain OpenCog build dependencies.
.TP
.B
\fB-d\fP
Install OpenCog build dependencies.
.TP
.B
\fB-u\fP
Update OpenCog's local branch.
.TP
.B
\fB-b\fP
Build OpenCog locally.
.TP
.B
\fB-t\fP
Test OpenCog after local build.
.TP
.B
\fB-p\fP
Reinstall Debian packages uninstalled
(i.e. 'apt-get remove') by \fBocpkg\fP.
.TP
.B
\fB-v\fP
Turn on verbose mode.
.TP
.B
\fB-h\fP
Prints out help message with usage instructions.
.RE
.RE
.TP
.B
\fBocpkg\fP \fB--local\fP [\fIoptions\fP]
Build OpenCog in a local directory.
.RS
.TP
.B
Options:
.RS
.TP
.B
\fB-j\fP MAKE_JOBS
Override auto-detected 'make' jobs (number
of jobs/commands to run simultaneously).
.TP
.B
\fB-s\fP LOCAL_SOURCE_DIR
Local source branch/directory of OpenCog.
.TP
.B
\fB-l\fP LOCAL_BUILD_DIR
Local build directory.
.TP
.B
\fB-r\fP BZR_REVISION
Bazaar revision number to branch locally.
.TP
.B
\fB-n\fP
Suppress Bazaar update (before building
Debian packages).
.TP
.B
\fB-v\fP
Turn on verbose mode.
.TP
.B
\fB-h\fP
Prints out help message with usage instructions.
.RE
.RE
.TP
.B
\fBocpkg\fP \fB--ppa\fP [\fIoptions\fP]
Build source package and upload to specified
Launchpad PPA.
.RS
.TP
.B
Options:
.RS
.TP
.B
\fB-s\fP LOCAL_SOURCE_DIR
Local source branch/directory of OpenCog.
.TP
.B
\fB-l\fP LOCAL_BUILD_DIR
Local build directory.
.TP
.B
\fB-r\fP BZR_REVISION
Bazaar revision number to branch locally.
.TP
.B
\fB-p\fP PPA_LOCATION
Launchpad PPA location listed under "Uploading
packages to this PPA" section on PPA's overview
webpage.
.TP
.B
\fB-d\fP
Digitally sign packages with GPG.
.TP
.B
\fB-n\fP
Suppress Bazaar update before building
Debian packages.
.TP
.B
\fB-v\fP
Turn on verbose mode.
.TP
.B
\fB-h\fP
Prints out help message with usage instructions.
.RE
.RE
.TP
.B
\fBocpkg\fP \fB--dailydeb\fP [\fIoptions\fP]
Test Launchpad Launchpad's daily source
package recipes.
.RS
.TP
.B
Options:
\fB-v\fP Turn on verbose mode.
.RS
.PP
\fB-h\fP Prints out help message with usage instructions.
.SH FILES AND DIRECTORIES
.TP
.B
lp:\fBocpkg\fP/ocbootstrap
A script to create a chroot environment in which
to run \fBocpkg\fP.
.TP
.B
lp:\fBocpkg\fP/oc-cygwin-setup.bat
Windows batch script to install and setup
Cygwin packages needed to build OpenCog.
.TP
.B
lp:\fBocpkg\fP/ocfeedbot
IRC bot that keeps track of RSS feeds.
.TP
.B
lp:\fBocpkg\fP/debian/
Debian packaging configuration.
.SH EXAMPLES
Even though \fBocpkg\fP has loads of \fIoptions\fP (intended to be used by OpenCog
packagers), \fBocpkg\fP uses sane defaults so that simply typing any of the
commands (without any \fIoptions\fP) work out of the box such as:
.PP
.nf
.fam C
        ocpkg --debs

        ocpkg --tool

        ocpkg --local

        ocpkg --dailydeb

.fam T
.fi
.SH BUGS
Not known.
.SH AUTHORS
OpenCog Foundation
.PP
OpenCog homepage is located at http://opencog.org/
.PP
The currently active \fBocpkg\fP development branches are located at:
.IP 1. 4
https://launchpad.net/\fBocpkg\fP aka lp:\fBocpkg\fP (stable, recommended)
.IP 2. 4
https://code.launchpad.net/~i-amber-jain/\fBocpkg\fP/amberj-\fBocpkg\fP (trunk, unstable).
